"use strict";(self.webpackChunkdocs_src=self.webpackChunkdocs_src||[]).push([[88],{8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var d=n(6540);const a={},r=d.createContext(a);function o(e){const t=d.useContext(r);return d.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),d.createElement(r.Provider,{value:t},e.children)}},9350:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>d,toc:()=>h});const d=JSON.parse('{"id":"api-ref/components/pie-3d","title":"Pie-3d","description":"General notes","source":"@site/docs/api-ref/components/pie-3d.md","sourceDirName":"api-ref/components","slug":"/api-ref/components/pie-3d","permalink":"/x-charts-js/docs/api-ref/components/pie-3d","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"sidebar_label":"Pie-3d"},"sidebar":"docsSidebar","previous":{"title":"Legend","permalink":"/x-charts-js/docs/api-ref/components/legend"}}');var a=n(4848),r=n(8453);const o={sidebar_label:"Pie-3d"},i="Pie-3d",s={},h=[{value:"General notes",id:"general-notes",level:2},{value:"Rotations order",id:"rotations-order",level:3},{value:"Unsafely large numeric values",id:"unsafely-large-numeric-values",level:3},{value:"xChartsJs.add() method",id:"xchartsjsadd-method",level:2},{value:"addMethodArgument.type",id:"addmethodargumenttype",level:3},{value:"addMethodArgument.zIndex",id:"addmethodargumentzindex",level:3},{value:"addMethodArgument.options",id:"addmethodargumentoptions",level:3},{value:"addMethodArgument.options.thicknessPx",id:"addmethodargumentoptionsthicknesspx",level:3},{value:"addMethodArgument.options.radiusPx",id:"addmethodargumentoptionsradiuspx",level:3},{value:"addMethodArgument.options.centerXPx",id:"addmethodargumentoptionscenterxpx",level:3},{value:"addMethodArgument.options.centerYPx",id:"addmethodargumentoptionscenterypx",level:3},{value:"addMethodArgument.options.startAtDeg",id:"addmethodargumentoptionsstartatdeg",level:3},{value:"addMethodArgument.options.rotationAroundCenterXAxisDeg",id:"addmethodargumentoptionsrotationaroundcenterxaxisdeg",level:3},{value:"addMethodArgument.options.rotationAroundCenterZAxisDeg",id:"addmethodargumentoptionsrotationaroundcenterzaxisdeg",level:3},{value:"addMethodArgument.data",id:"addmethodargumentdata",level:3},{value:"addMethodArgument.data[N]",id:"addmethodargumentdatan",level:3},{value:"addMethodArgument.data[N].value",id:"addmethodargumentdatanvalue",level:3},{value:"addMethodArgument.data[N].meta",id:"addmethodargumentdatanmeta",level:3},{value:"addMethodArgument.data[N].meta.faceColor",id:"addmethodargumentdatanmetafacecolor",level:3},{value:"addMethodArgument.data[N].meta.rimColor",id:"addmethodargumentdatanmetarimcolor",level:3}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"pie-3d",children:"Pie-3d"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"import '/path-to/x-charts-js/components/pie-3d/main.js';\n\nxChartsJs.add(addMethodArgument);\n"})}),"\n",(0,a.jsx)(t.h2,{id:"general-notes",children:"General notes"}),"\n",(0,a.jsx)(t.h3,{id:"rotations-order",children:"Rotations order"}),"\n",(0,a.jsx)(t.p,{children:"The chart has several options which transform its position in 3d space. The\ntransformations happen in this order:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["rotate around the pie's center - Z axis, by\nthe ",(0,a.jsx)(t.a,{href:"#addmethodargumentoptionsstartatdeg",children:"addMethodArgument.options.startAtDeg"}),"\nangle."]}),"\n",(0,a.jsxs)(t.li,{children:["rotate around the pie's center - X axis, by\nthe ",(0,a.jsx)(t.a,{href:"#addmethodargumentoptionsrotationaroundcenterxaxisdeg",children:"addMethodArgument.options.rotationAroundCenterXAxisDeg"}),"\nangle."]}),"\n",(0,a.jsxs)(t.li,{children:["rotate around the pie's center - Z axis, by\nthe ",(0,a.jsx)(t.a,{href:"#addmethodargumentoptionsrotationaroundcenterzaxisdeg",children:"addMethodArgument.options.rotationAroundCenterZAxisDeg"}),"\nangle."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"There is no way to change this order."}),"\n",(0,a.jsx)(t.h3,{id:"unsafely-large-numeric-values",children:"Unsafely large numeric values"}),"\n",(0,a.jsx)(t.admonition,{type:"warning",children:(0,a.jsxs)(t.p,{children:["Currently there are no safeguards regarding too large numbers, e.g. those which\nare close to ",(0,a.jsx)(t.code,{children:"Number.MAX_VALUE"})," so that mathematical operations become\ninaccurate."]})}),"\n",(0,a.jsxs)(t.p,{children:["E.g. if the data provided contains values large enough that when summed up,\nprocessed the result will be inaccurate (",(0,a.jsx)(t.code,{children:"Infinity"}),", ",(0,a.jsx)(t.code,{children:"NaN"})," etc.), then currently\nthe user is supposed to take care of this."]}),"\n",(0,a.jsx)(t.p,{children:"normalize data to something reasonable/safe. E.g divide each item by\n1,000,000,000,000 etc., exclude/combine too small values etc."}),"\n",(0,a.jsx)(t.p,{children:"Currently this was deemed to be an overkill to implement."}),"\n",(0,a.jsx)(t.h2,{id:"xchartsjsadd-method",children:"xChartsJs.add() method"}),"\n",(0,a.jsx)(t.p,{children:"Arguments:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"addMethodArgument: object"}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"addmethodargumenttype",children:"addMethodArgument.type"}),"\n",(0,a.jsxs)(t.p,{children:["Constant string ",(0,a.jsx)(t.code,{children:"'pie-3d'"})]}),"\n",(0,a.jsx)(t.h3,{id:"addmethodargumentzindex",children:"addMethodArgument.zIndex"}),"\n",(0,a.jsxs)(t.p,{children:["A numeric integer string. E.g. ",(0,a.jsx)(t.code,{children:"'-1'"}),", ",(0,a.jsx)(t.code,{children:"'0'"})," etc."]}),"\n",(0,a.jsxs)(t.p,{children:["Similar to the CSS ",(0,a.jsx)(t.code,{children:"z-index"}),". Equals the order of the component in a 'component\nstack', which is used to draw the components."]}),"\n",(0,a.jsx)(t.h3,{id:"addmethodargumentoptions",children:"addMethodArgument.options"}),"\n",(0,a.jsx)(t.p,{children:"An object."}),"\n",(0,a.jsx)(t.h3,{id:"addmethodargumentoptionsthicknesspx",children:"addMethodArgument.options.thicknessPx"}),"\n",(0,a.jsx)(t.p,{children:"A number of pixels for the pie's height/thickness."}),"\n",(0,a.jsx)(t.h3,{id:"addmethodargumentoptionsradiuspx",children:"addMethodArgument.options.radiusPx"}),"\n",(0,a.jsx)(t.p,{children:"A number of pixels for the pie's radius"}),"\n",(0,a.jsx)(t.h3,{id:"addmethodargumentoptionscenterxpx",children:"addMethodArgument.options.centerXPx"}),"\n",(0,a.jsx)(t.p,{children:"A number, the x coordinate of the pie's center point (the origin is the top left\ncorner, which is the standard for the HTML 5 Canvas)."}),"\n",(0,a.jsx)(t.h3,{id:"addmethodargumentoptionscenterypx",children:"addMethodArgument.options.centerYPx"}),"\n",(0,a.jsx)(t.p,{children:"A number, the y coordinate of the pie's center point (the origin is the top left\ncorner, which is the standard for the HTML 5 Canvas)."}),"\n",(0,a.jsx)(t.h3,{id:"addmethodargumentoptionsstartatdeg",children:"addMethodArgument.options.startAtDeg"}),"\n",(0,a.jsx)(t.p,{children:"A number, the angle in degrees from which the first slice will be drawn\ncounterclockwise."}),"\n",(0,a.jsx)(t.h3,{id:"addmethodargumentoptionsrotationaroundcenterxaxisdeg",children:"addMethodArgument.options.rotationAroundCenterXAxisDeg"}),"\n",(0,a.jsx)(t.p,{children:"A number, the angle in degrees by which the standard 2d pie will be rotated\naround the axis passing thru its center and parallel to the originX axis."}),"\n",(0,a.jsx)(t.h3,{id:"addmethodargumentoptionsrotationaroundcenterzaxisdeg",children:"addMethodArgument.options.rotationAroundCenterZAxisDeg"}),"\n",(0,a.jsx)(t.p,{children:"A number, the angle in degrees by which the standard 2d pie will be rotated\naround the axis passing thru its center and parallel to the originZ axis."}),"\n",(0,a.jsx)(t.h3,{id:"addmethodargumentdata",children:"addMethodArgument.data"}),"\n",(0,a.jsx)(t.p,{children:"An array of data to draw."}),"\n",(0,a.jsx)(t.h3,{id:"addmethodargumentdatan",children:"addMethodArgument.data[N]"}),"\n",(0,a.jsx)(t.p,{children:"An object."}),"\n",(0,a.jsx)(t.h3,{id:"addmethodargumentdatanvalue",children:"addMethodArgument.data[N].value"}),"\n",(0,a.jsx)(t.p,{children:"A number >= 0. The actual numeric value to be represented by the chart."}),"\n",(0,a.jsx)(t.h3,{id:"addmethodargumentdatanmeta",children:"addMethodArgument.data[N].meta"}),"\n",(0,a.jsx)(t.p,{children:"An object."}),"\n",(0,a.jsx)(t.h3,{id:"addmethodargumentdatanmetafacecolor",children:"addMethodArgument.data[N].meta.faceColor"}),"\n",(0,a.jsxs)(t.p,{children:["A string. A hexadecimal color code. E.g. ",(0,a.jsx)(t.code,{children:"#3300ff"})," or ",(0,a.jsx)(t.code,{children:"#3300FF"}),"."]}),"\n",(0,a.jsx)(t.p,{children:"The face of the slice on the pie, which corresponds to the data item, will be\nfilled with this color."}),"\n",(0,a.jsx)(t.h3,{id:"addmethodargumentdatanmetarimcolor",children:"addMethodArgument.data[N].meta.rimColor"}),"\n",(0,a.jsxs)(t.p,{children:["A string. A hexadecimal color code. E.g. ",(0,a.jsx)(t.code,{children:"#3300ff"})," or ",(0,a.jsx)(t.code,{children:"#3300FF"}),"."]}),"\n",(0,a.jsx)(t.p,{children:"The rim part of the slice on the pie, which corresponds to the data item, will\nbe filled with this color."})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);